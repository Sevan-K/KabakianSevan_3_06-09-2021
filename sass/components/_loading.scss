// Variable equal to the square root of 2 ==> 1.41421356237
$sqrt-2: 1.414;
$load-size: clamp(2rem, 2rem + 1vw, 4rem);
$loading-dur: 750ms;
$loading-nb: 8;

$ball-positions: (
  1: (
    X: 1,
    Y: 0,
  ),
  2: (
    X: calc(1 / #{$sqrt-2}),
    Y: calc(-1 / #{$sqrt-2}),
  ),
  3: (
    X: 0,
    Y: -1,
  ),
  4: (
    X: calc(-1 / #{$sqrt-2}),
    Y: calc(-1 / #{$sqrt-2}),
  ),
  5: (
    X: -1,
    Y: 0,
  ),
  6: (
    X: calc(-1 / #{$sqrt-2}),
    Y: calc(1 / #{$sqrt-2}),
  ),
  7: (
    X: 0,
    Y: 1,
  ),
  8: (
    X: calc(1 / #{$sqrt-2}),
    Y: calc(1 / #{$sqrt-2}),
  ),
);

// mixin to set balls' positions and scale
@mixin ball-positions-scale {
  @each $positions, $coordonates in $ball-positions {
    $position: map-get(
      $map: $ball-positions,
      $key: $positions,
    );
    $X: map-get($position, X);
    $Y: map-get($position, Y);
    &--#{$positions} {
      transform: translate(
        calc(#{$X}*#{$load-size}* 2),
        calc(#{$Y}*#{$load-size}* 2)
      );
    }
  }
}

@keyframes loading-spiner {
  from {
    opacity: 1;
  }
  to {
    opacity: 0;
  }
}
@keyframes loading-disapear {
  to {
    opacity: 0;
    z-index: -1;
  }
}

.loading {
  position: fixed;
  display: flex;
  justify-content: center;
  align-items: center;
  width: 100%;
  height: 100%;
  @include bg-text-color(color-primary-lighter);
  animation: loading-disapear $loading-dur 3*$loading-dur  forwards;
  z-index: 10;
  &__ball {
    position: fixed;
    width: $load-size;
    height: $load-size;
    border-radius: 50%;
    overflow: hidden;
    @include ball-positions-scale;
    &::after {
      content: "";
      position: absolute;
      width: $load-size;
      height: $load-size;
      border-radius: 50%;
      background: $color-primary;
      opacity: 0;
      animation: loading-spiner $loading-dur 4 linear;
    }
    @for $i from 1 through $loading-nb {
      &--#{$i}::after {
        animation-delay: $i * $loading-dur/$loading-nb;
      }
    }
    &::before {
      content: "";
      position: absolute;
      width: $load-size;
      height: $load-size;
      border-radius: 50%;
      background: $color-tertiary;
    }
  }
}
