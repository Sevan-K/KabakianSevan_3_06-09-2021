// mixin to determine backgound color and text color of a block
@mixin bg-text-color($bg-style: color-text-lighter) {
  $bg-color: change-bg-color($bg-style);
  background: $bg-color;
  color: change-color-text($bg-color);
}
// mixin for adding padding to an element
@mixin set-padding($bloc-type) {
  padding: map-get($map: $padding-dimensions, $key: $bloc-type);
}
// mixin for changing step__text's before content
@mixin before-content($map) {
  @each $type, $content in $map {
    &--#{$type}::before {
      content: $content;
    }
  }
}
// mixin for font awesome content définition
@mixin fontawesome($font-weight: bold) {
  font-family: "Font Awesome 5 Free";
  font-weight: $font-weight;
}

@mixin position_absolute {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
}
// mixin felx ??

@mixin heart-styling {
  position: relative;
    &::before {
      content: "\f004";
      @include fontawesome(normal);
      // a inclure dans la palette de typo
      font-size: map-get($icons-size, cards);
      opacity: 1;
      // faire une mixin couplée à une map ?
      transition: opacity $transition-duration;
    }
    &::after {
      content: "\f004";
      font-family: "Font Awesome 5 Free";
      font-weight: bold;
      // a inclure dans la palette de typo
      font-size: map-get($icons-size, cards);
      @include position_absolute;
      background: linear-gradient(
        0deg,
        $color-secondary 0%,
        $color-primary 100%
      );
      background-clip: text;
      -webkit-background-clip: text;
      color: transparent;
      opacity: 0;
      transition: opacity $transition-duration;
    }
    &:hover {
      &::before {
        opacity: 0;
      }
      &::after {
        opacity: 1;
      }
    }
}
